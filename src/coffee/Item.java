/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package coffee;

import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.net.URISyntaxException;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author abcd
 */
public class Item extends javax.swing.JFrame {

    Connection conn;
    ResultSet rs;
    PreparedStatement pst;
    static Integer Command;

    int ADD = 0;
    int UPDATE = 1;

    /**
     * Creates new form Items
     */
    public Item() {
        super("Item");
        initComponents();
        conn = dbconnect.connectdb();
        FrameInit();
        setCategoryModel();
        URL resource = getClass().getResource("/iconandpictures/Blank.jpg");

        try {
       //     imagePanel2.setImage(new ImageIcon(resource).getImage(),
          //          imagePanel2.getWidth(), imagePanel2.getHeight());
        } catch (Exception ex) {
            Logger.getLogger(Item.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void FrameInit() {
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setSize(dim);             ///This will let frame initialise in full screen
        //txtitemid.setEnabled(false);
        txtitemname.setEnabled(false);
        txtprice.setEnabled(false);
        txtflavour.setEnabled(false);
        ComboCatname.setEnabled(false);
        txtcatid.setEnabled(false);
       // txtpic.setEnabled(false);

    }

    public Item(String ItemID, String ItemName, String Price, String Flavour, String CategoryName, String CategoryID) {
        super("Item");
        initComponents();
        conn = dbconnect.connectdb();
        FrameInit();
        setCategoryModel();
        txtitemid.setText(ItemID);
        txtitemname.setText(ItemName);
        txtprice.setText(Price);
        txtflavour.setText(Flavour);
        ComboCatname.setSelectedItem(CategoryName);
        txtcatid.setText(CategoryID);
       // txtpic.setText(Picture);
       // imagePanel2.setImage(new ImageIcon(Picture).getImage(),
             //   imagePanel2.getWidth(), imagePanel2.getHeight());
    }

    private void setCategoryModel() {
        try {
            txtcatid.setEnabled(false);
            String Qry = "SELECT CategoryName from category;";
            pst = conn.prepareStatement(Qry);
            rs = pst.executeQuery();

            while (rs.next()) {
                System.out.println(rs.getString("CategoryName"));
                ComboCatname.addItem(rs.getString("CategoryName"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Item.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imagePanel1 = new coffee.ImagePanel();
        btnsave = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        btndelete = new javax.swing.JButton();
        btnadd = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        btnsearch = new javax.swing.JButton();
        btnhome = new javax.swing.JButton();
        txtitemid = new javax.swing.JTextField();
        txtitemname = new javax.swing.JTextField();
        txtprice = new javax.swing.JTextField();
        txtflavour = new javax.swing.JTextField();
        txtcatid = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnrefresh = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        ComboCatname = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        txtentpicture = new javax.swing.JLabel();
        txtlid = new javax.swing.JLabel();
        txtlname = new javax.swing.JLabel();
        txtlflavour = new javax.swing.JLabel();
        txtlprice = new javax.swing.JLabel();
        txtlcname = new javax.swing.JLabel();
        txtlcid = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        imagePanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnsave.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        btnsave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconandpictures/save.png"))); // NOI18N
        btnsave.setText("SAVE");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });
        imagePanel1.add(btnsave, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 370, 151, 50));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 70)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 204, 204));
        jLabel8.setText("ITEM");
        imagePanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 11, -1, -1));

        btndelete.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconandpictures/delete.png"))); // NOI18N
        btndelete.setText("DELETE");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });
        imagePanel1.add(btndelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 530, 151, 50));

        btnadd.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        btnadd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconandpictures/add.png"))); // NOI18N
        btnadd.setText("ADD");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });
        imagePanel1.add(btnadd, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 210, 151, 50));

        btnupdate.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        btnupdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconandpictures/Update.png"))); // NOI18N
        btnupdate.setText("UPDATE");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });
        imagePanel1.add(btnupdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 290, 151, 50));

        btnsearch.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        btnsearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconandpictures/search.png"))); // NOI18N
        btnsearch.setText("SEARCH");
        btnsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchActionPerformed(evt);
            }
        });
        imagePanel1.add(btnsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 130, 151, 50));

        btnhome.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        btnhome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconandpictures/home.png"))); // NOI18N
        btnhome.setText("HOME");
        btnhome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhomeActionPerformed(evt);
            }
        });
        imagePanel1.add(btnhome, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 120, -1, 50));

        txtitemid.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        txtitemid.setPreferredSize(new java.awt.Dimension(250, 40));
        txtitemid.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtitemidFocusLost(evt);
            }
        });
        txtitemid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtitemidActionPerformed(evt);
            }
        });
        txtitemid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtitemidKeyTyped(evt);
            }
        });
        imagePanel1.add(txtitemid, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 130, 257, -1));

        txtitemname.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        txtitemname.setPreferredSize(new java.awt.Dimension(250, 40));
        txtitemname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtitemnameKeyTyped(evt);
            }
        });
        imagePanel1.add(txtitemname, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 200, 257, -1));

        txtprice.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        txtprice.setPreferredSize(new java.awt.Dimension(250, 40));
        txtprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpriceActionPerformed(evt);
            }
        });
        txtprice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtpriceKeyTyped(evt);
            }
        });
        imagePanel1.add(txtprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 340, 257, -1));

        txtflavour.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        txtflavour.setPreferredSize(new java.awt.Dimension(250, 40));
        txtflavour.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtflavourKeyTyped(evt);
            }
        });
        imagePanel1.add(txtflavour, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 270, 257, -1));

        txtcatid.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        txtcatid.setPreferredSize(new java.awt.Dimension(250, 40));
        txtcatid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcatidActionPerformed(evt);
            }
        });
        txtcatid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcatidKeyTyped(evt);
            }
        });
        imagePanel1.add(txtcatid, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 480, 257, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Flavour");
        imagePanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 270, -1, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Price");
        imagePanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 340, -1, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Item Name");
        imagePanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, -1, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Item ID");
        imagePanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 140, -1, -1));

        btnrefresh.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        btnrefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconandpictures/settings.png"))); // NOI18N
        btnrefresh.setText("REFRESH");
        btnrefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrefreshActionPerformed(evt);
            }
        });
        imagePanel1.add(btnrefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 450, -1, 50));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Category Name");
        imagePanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 400, -1, 50));

        ComboCatname.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        ComboCatname.setPreferredSize(new java.awt.Dimension(66, 40));
        ComboCatname.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboCatnameItemStateChanged(evt);
            }
        });
        ComboCatname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboCatnameActionPerformed(evt);
            }
        });
        ComboCatname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ComboCatnameKeyTyped(evt);
            }
        });
        imagePanel1.add(ComboCatname, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 410, 257, -1));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Category ID");
        imagePanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 480, -1, -1));

        txtentpicture.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        txtentpicture.setForeground(new java.awt.Color(255, 0, 0));
        imagePanel1.add(txtentpicture, new org.netbeans.lib.awtextra.AbsoluteConstraints(366, 757, 250, 26));

        txtlid.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        txtlid.setForeground(new java.awt.Color(255, 0, 51));
        imagePanel1.add(txtlid, new org.netbeans.lib.awtextra.AbsoluteConstraints(366, 197, 250, 23));

        txtlname.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        txtlname.setForeground(new java.awt.Color(255, 0, 51));
        imagePanel1.add(txtlname, new org.netbeans.lib.awtextra.AbsoluteConstraints(366, 286, 250, 23));

        txtlflavour.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        txtlflavour.setForeground(new java.awt.Color(255, 0, 51));
        imagePanel1.add(txtlflavour, new org.netbeans.lib.awtextra.AbsoluteConstraints(366, 414, 250, 20));

        txtlprice.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        txtlprice.setForeground(new java.awt.Color(255, 0, 51));
        imagePanel1.add(txtlprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(366, 492, 250, 20));

        txtlcname.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        txtlcname.setForeground(new java.awt.Color(255, 0, 51));
        imagePanel1.add(txtlcname, new org.netbeans.lib.awtextra.AbsoluteConstraints(366, 576, 250, 23));

        txtlcid.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        txtlcid.setForeground(new java.awt.Color(255, 0, 51));
        imagePanel1.add(txtlcid, new org.netbeans.lib.awtextra.AbsoluteConstraints(366, 658, 250, 23));

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconandpictures/next.png"))); // NOI18N
        jButton2.setText("NEXT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        imagePanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 620, 151, 45));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "itemid", "itemname", "flavour", "price", "catgname", "catgid"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        imagePanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 210, 330, 250));

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconandpictures/view.png"))); // NOI18N
        jButton3.setText("VIEW");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        imagePanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 130, 110, 42));

        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconandpictures/back-arrow.png"))); // NOI18N
        jButton4.setText("BACK");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        imagePanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 620, -1, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imagePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(imagePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        try {
            txtitemid.setText("");
            txtitemname.setText("");
            txtprice.setText("");
            txtflavour.setText("");
            ComboCatname.setToolTipText("");
            txtcatid.setText("");
            txtitemid.setEnabled(false);
            txtflavour.setEnabled(true);
            txtitemname.setEnabled(true);
            txtprice.setEnabled(true);
            txtflavour.setEnabled(true);
            ComboCatname.setEnabled(true);
            txtcatid.setEnabled(false);
            btndelete.setVisible(false);
            btnupdate.setVisible(false);   
            btnsave.setVisible(true);
            btnsearch.setVisible(true);
            Command = ADD;

            String getIDQry = "Select ItemID FROM autogen;";
            pst = conn.prepareStatement(getIDQry);
            rs = pst.executeQuery();

            if (rs.next()) {
                txtitemid.setText(rs.getString("ItemID"));
            } else {
                JOptionPane.showMessageDialog(null, "Unknown Error!!");
            }

        } catch (SQLException ex) {
            Logger.getLogger(Customers.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnaddActionPerformed

    private void txtcatidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcatidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcatidActionPerformed

    private void txtitemidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtitemidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtitemidActionPerformed

    private void btnhomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhomeActionPerformed
        setVisible(false);
        HomePage ob = new HomePage();
        ob.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_btnhomeActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        int p = JOptionPane.showConfirmDialog(null, "Are u sure u want to delete?", "delete", JOptionPane.YES_NO_OPTION);
        if (p == 0) {
            String sql = "delete from item where ItemID=?";
            try {

                pst = conn.prepareStatement(sql);
                pst.setString(1, txtitemid.getText());

                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "deleted sucessfuly");

                String IDUpdateQry = "Update autogen SET ItemID=?";

                pst = conn.prepareStatement(IDUpdateQry);
                pst.setString(1, "" + (Integer.parseInt(txtitemid.getText()) - (int) 1));

                btnsearch.setVisible(true);
                btnsave.setVisible(true);
                btnupdate.setVisible(true);
                btnadd.setVisible(true);
                txtitemid.setText("");
                txtitemname.setText("");
                txtprice.setText("");
                txtflavour.setText("");
                ComboCatname.setToolTipText("");
                txtcatid.setText("");
            } catch (HeadlessException | NumberFormatException | SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }// TODO add your handling code here:
    }//GEN-LAST:event_btndeleteActionPerformed

    private void btnsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchActionPerformed
        txtitemid.setEnabled(true);
        try {

            String sql2 = "SELECT * FROM item WHERE ItemID=?";
            pst = conn.prepareStatement(sql2);
            pst.setString(1, txtitemid.getText());
            rs = pst.executeQuery();
            if (rs.next()) {
                txtitemid.setText(rs.getString("ItemID"));
                txtitemname.setText(rs.getString(2));
                txtprice.setText(rs.getString(3));
                txtflavour.setText(rs.getString(4));
                ComboCatname.setSelectedItem(rs.getString(5));
                txtcatid.setText(rs.getString(6));
               // txtpic.setText(rs.getString(7));
            } else {
                JOptionPane.showMessageDialog(null, "incorrect ItemID");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Customers.class.getName()).log(Level.SEVERE, null, ex);
        }

// TODO add your handling code here:
    }//GEN-LAST:event_btnsearchActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        try {

            txtitemname.setText("");
            txtprice.setText("");
            txtflavour.setText("");
            ComboCatname.setToolTipText("");
            txtcatid.setText("");
            txtitemid.setEnabled(true);
            txtflavour.setEnabled(true);
            txtitemname.setEnabled(true);
            txtprice.setEnabled(true);
            txtflavour.setEnabled(true);
            ComboCatname.setEnabled(true);
            txtcatid.setEnabled(true);
            Command = UPDATE;
            
            btnupdate.setVisible(true);
            btnadd.setVisible(false);
            btndelete.setVisible(false);
            
            
            String sql2 = "SELECT * FROM item WHERE ItemID=?";
            pst = conn.prepareStatement(sql2);
            pst.setString(1, txtitemid.getText());
            rs = pst.executeQuery();
            if (rs.next()) {
                txtitemid.setText(rs.getString("ItemID"));
                txtitemname.setText(rs.getString(2));
                txtprice.setText(rs.getString(3));
                txtflavour.setText(rs.getString(4));
                ComboCatname.setSelectedItem(rs.getString(5));
                txtcatid.setText(rs.getString(6));
          //      txtpic.setText(rs.getString(7));
            } else {
                JOptionPane.showMessageDialog(null, "incorrect ItemID");
            }

        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);

        }                                 // TODO add your handling code here:
    }//GEN-LAST:event_btnupdateActionPerformed

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        try {
            if (Command == UPDATE) {
                String sql = "update item set ItemID=?,"
                        + "ItemName=?,Price=?,Flavour=?,"
                        + "CategoryName=?,CategoryID=?"
                        + "where ItemID=?";
                pst = conn.prepareStatement(sql);
                pst.setString(1, txtitemid.getText());
                pst.setString(2, txtitemname.getText());
                pst.setString(3, txtprice.getText());
                pst.setString(4, txtflavour.getText());
                pst.setString(5, ComboCatname.getToolTipText());
                pst.setString(6, txtcatid.getText());
              //  pst.setString(7, txtitemid.getText() + "." + getFileExtension(new File(txtpic.getText())));
                pst.setString(7, txtitemid.getText());

                int executeUpdate = pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "updated sucessfuly");
                txtitemid.setText("");
                txtitemname.setText("");
                txtprice.setText("");
                txtflavour.setText("");
                ComboCatname.setToolTipText("");
                
                txtcatid.setText("");
                btndelete.setVisible(true);
                btnsearch.setVisible(true);
                btnsave.setVisible(true);
                btnupdate.setVisible(true);
                btnadd.setVisible(true);
            } else if (Command == ADD) {

               // CopyFile(new File(txtpic.getText()).toPath(), txtitemid.getText());
                String sql = "Insert into item (ItemID,ItemName,Price,Flavour,CategoryName,CategoryID) values (?,?,?,?,?,?)";
                pst = conn.prepareStatement(sql);
                pst.setString(1, txtitemid.getText());
                pst.setString(2, txtitemname.getText());
                pst.setString(3, txtprice.getText());
                pst.setString(4, txtflavour.getText());
                pst.setString(5, ComboCatname.getSelectedItem().toString());
                pst.setString(6, txtcatid.getText());
              //  pst.setString(7, txtitemid.getText() + "." + getFileExtension(new File(txtpic.getText())));
                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "inserted successfully");
                String IDUpdateQry = "Update autogen SET ItemID=?";

                pst = conn.prepareStatement(IDUpdateQry);
                pst.setString(1, "" + (Integer.parseInt(txtitemid.getText()) + (int) 1));
                pst.executeUpdate();

                btndelete.setVisible(true);
                btnsearch.setVisible(true);
                btnsave.setVisible(true);
                btnupdate.setVisible(true);
                txtitemid.setText("");
                txtitemname.setText("");
                txtprice.setText("");
                txtflavour.setText("");
                ComboCatname.setToolTipText("");
                txtcatid.setText("");
                btndelete.setVisible(true);
                btnsearch.setVisible(true);
                btnsave.setVisible(true);
                btnupdate.setVisible(true);
                btnadd.setVisible(true);
            }
            //txtitemname.setEnabled(false);
            //txtprice.setEnabled(false);
            //txtflavour.setEnabled(false);
            //txtcatname.setEnabled(false);
            //txtcatid.setEnabled(false);

        } catch (HeadlessException | NumberFormatException | SQLException ex) {
            Logger.getLogger(Item.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            this.setVisible(false);
            new Item().setVisible(true);
        }
    }//GEN-LAST:event_btnsaveActionPerformed

    private void ComboCatnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboCatnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboCatnameActionPerformed

    private void txtpriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpriceActionPerformed

    private void btnrefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrefreshActionPerformed
        txtitemid.setText("");
        txtitemname.setText("");
        txtprice.setText("");
        txtflavour.setText("");
        ComboCatname.setToolTipText("");
        txtcatid.setText("");
       // txtpic.setText("");
         btnadd.setVisible(true);
        btndelete.setVisible(true);
        btnsave.setVisible(true);
        btnsearch.setVisible(true);
        btnupdate.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_btnrefreshActionPerformed

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        FrameSet();
    }//GEN-LAST:event_formComponentResized

    private void txtitemidFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtitemidFocusLost
        try {
            txtitemid.setEnabled(false);
            String sql2 = "SELECT * FROM item WHERE ItemID=?";
            pst = conn.prepareStatement(sql2);
            pst.setString(1, txtitemid.getText());
            rs = pst.executeQuery();
            if (rs.next()) {
                txtitemid.setText(rs.getString("ItemID"));
                txtitemname.setText(rs.getString(2));
                txtprice.setText(rs.getString(3));
                txtflavour.setText(rs.getString(4));
                ComboCatname.setToolTipText(rs.getString(5));
                txtcatid.setText(rs.getString(6));
            } else {
                JOptionPane.showMessageDialog(null, "incorrect ItemID");
            }

        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);

            // TODO add your handling code here:
        }
    }//GEN-LAST:event_txtitemidFocusLost

    private void ComboCatnameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboCatnameItemStateChanged
        try {
            Connection connL;
            connL = dbconnect.connectdb();
            ResultSet rsL;
            PreparedStatement pstL;
            String SelectedItem = ComboCatname.getSelectedItem().toString();
            String Qry = "select CategoryID from category where CategoryName = '" + SelectedItem + "';";

            pstL = connL.prepareStatement(Qry);
            rsL = pstL.executeQuery();
            if (rsL.next()) {
                txtcatid.setText(rsL.getString("CategoryId"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Item.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_ComboCatnameItemStateChanged

    private void txtitemidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtitemidKeyTyped
        txtlid.setText("");// TODO add your handling code here:
    }//GEN-LAST:event_txtitemidKeyTyped

    private void txtitemnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtitemnameKeyTyped
       txtlname.setText(""); // TODO add your handling code here:
    }//GEN-LAST:event_txtitemnameKeyTyped

    private void txtpriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpriceKeyTyped
        txtlprice.setText("");// TODO add your handling code here:
    }//GEN-LAST:event_txtpriceKeyTyped

    private void txtflavourKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtflavourKeyTyped
       txtlflavour.setText(""); // TODO add your handling code here:
    }//GEN-LAST:event_txtflavourKeyTyped

    private void txtcatidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcatidKeyTyped
        txtlcid.setText("");// TODO add your handling code here:
    }//GEN-LAST:event_txtcatidKeyTyped

    private void ComboCatnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ComboCatnameKeyTyped
       txtlcname.setText(""); // TODO add your handling code here:
    }//GEN-LAST:event_ComboCatnameKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        new Order ().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
         setVisible(false);
        Categorys ob = new Categorys();
        ob.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         try
        {
              Statement St = conn.createStatement();
    String query="select * from item";
    PreparedStatement pstmt=conn.prepareStatement(query);
     rs=pstmt.executeQuery();
     jTable1.setModel(DbUtils.resultSetToTableModel(rs));
}

             catch(SQLException e){
            JOptionPane.showMessageDialog(null,"Error:"+e);
             }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Windows".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Item.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Item().setVisible(true);
//            }
//        });
//    }
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboCatname;
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnhome;
    private javax.swing.JButton btnrefresh;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnsearch;
    private javax.swing.JButton btnupdate;
    private coffee.ImagePanel imagePanel1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtcatid;
    private javax.swing.JLabel txtentpicture;
    private javax.swing.JTextField txtflavour;
    private javax.swing.JTextField txtitemid;
    private javax.swing.JTextField txtitemname;
    private javax.swing.JLabel txtlcid;
    private javax.swing.JLabel txtlcname;
    private javax.swing.JLabel txtlflavour;
    private javax.swing.JLabel txtlid;
    private javax.swing.JLabel txtlname;
    private javax.swing.JLabel txtlprice;
    private javax.swing.JTextField txtprice;
    // End of variables declaration//GEN-END:variables

    private void FrameSet() {
        URL resource = getClass().getResource("/UserImages/Item_1.jpg");

        try {
            //System.out.println(Paths.get(resource.toURI()).toFile().getAbsolutePath());
            imagePanel1.setImage(new ImageIcon(resource).getImage(),
                    this.getWidth(), this.getHeight());
        } catch (Exception ex) {
            Logger.getLogger(Item.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void CopyFile(Path Source, String ItemId) throws IOException {
        {
            try {
                Path Dest;
                Dest = Paths.get("." + "\\src\\UserImages\\Item_" + ItemId + "." + getFileExtension(Source.toFile()));
                Files.copy(Source, Dest, StandardCopyOption.REPLACE_EXISTING);
            } catch (IOException ex) {
                Logger.getLogger(Item.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private static String getFileExtension(File file) {
        String fileName = file.getName();
        if (fileName.lastIndexOf(".") != -1 && fileName.lastIndexOf(".") != 0) {
            return fileName.substring(fileName.lastIndexOf(".") + 1);
        } else {
            return "";
        }
    }

    private static boolean validate(String Email) {         /// Code for Email validation
        if (Email.indexOf('@') != -1) {
            {
                if (Email.endsWith(".com")) {
                    return true;

                }
            }
        }
        return false;
    }
}
